{"version":3,"sources":["webpack:///./src/components/Blockquote/index.module.css","webpack:///./src/components/Blockquote/index.js","webpack:///./src/components/Card/index.module.css","webpack:///./src/components/Card/index.js","webpack:///./src/components/CardList/index.js","webpack:///./src/utils/RemoveTrailingSlash.js","webpack:///./src/templates/CategoryOverview.js"],"names":["module","exports","Blockquote","text","author","className","style","Blockquote__icon","width","height","viewBox","xmlns","d","fill","fillRule","Blockquote__author","Card","title","url","image","description","grid","lang","cx","to","Card__wrapper","Card__image","Card__object","src","publicURL","alt","Card__empty","strokeWidth","stroke","fontFamily","fontSize","fontWeight","x","y","Card__body","Card__title","Card__flag","id","xlinkHref","mask","xmlnsXlink","Card__description","CardList","list","map","item","key","node","frontmatter","str","fields","slug","endsWith","slice","previewImage","renderAst","rehypeReact","createElement","React","components","Collapse","Compiler","CategoryOverviewTemplate","intro","blockquote","contentAbove","categoryPages","body","bodyHtml","Wrapper","tag","menu","Heading","align","Preamble","Content","source","pageQuery","CategoryOverviewPage","data","page","allPages","location","currentDirectory","window","href","split","filter","Boolean","pop","children","links","hasOwnProperty","edges","category","contentType","includes","breadcrumb","Layout","meta","backgroundClass","background","html","htmlAst"],"mappings":"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","file":"component---src-templates-category-overview-js-44dfb0e8ac867b37077a.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Blockquote\":\"index-module--Blockquote--2jWiT\",\"Blockquote__icon\":\"index-module--Blockquote__icon--l0_Vl\",\"Blockquote__author\":\"index-module--Blockquote__author--1yY4Y\"};","import React from 'react';\nimport style from './index.module.css';\n\nconst Blockquote = ({text, author}) => {\n  return (\n  <blockquote className={style.Blockquote}>\n    <svg className={style.Blockquote__icon} width=\"56\" height=\"47\" viewBox=\"0 0 56 47\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12.367 46.8c9-17.6 11.6-24.6 11.6-31.2v-1.292C23.956.8 23.618.8 12.366.8.533.8.177.8.167 12.665v1.782C.179 24.491.581 24.98 11.318 25l2.449.001-6.6 21.8h5.2zm31.133 0c9-17.6 11.6-24.6 11.6-31.2C55.1.8 55.1.8 43.5.8 31.788.8 31.32.8 31.3 12.302v2.46c.022 9.739.527 10.217 11.152 10.237L44.9 25l-6.6 21.8h5.2z\" fill=\"#B1B3B6\" fillRule=\"nonzero\"/></svg>\n    <p>{text}</p>\n    { author && <footer className={style.Blockquote__author}>{author}</footer>}\n  </blockquote>\n  )\n}\n\n\nexport default Blockquote","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"index-module--Card--37PZU\",\"Card__wrapper\":\"index-module--Card__wrapper--3uS3e\",\"Card__title\":\"index-module--Card__title--24zOY\",\"Card__title--small\":\"index-module--Card__title--small--2IYYK\",\"Card__flag\":\"index-module--Card__flag--3Q5g7\",\"Card--list\":\"index-module--Card--list--hSs3P\",\"Card__image\":\"index-module--Card__image--17j68\",\"Card__object\":\"index-module--Card__object--36DZO\",\"Card__empty\":\"index-module--Card__empty--bWgTv\",\"Card__image--spacing\":\"index-module--Card__image--spacing--1Rwn6\",\"Card__description\":\"index-module--Card__description--mu9ta\"};","import React from 'react';\nimport { Link } from 'gatsby';\nimport style from './index.module.css';\nimport cx from 'classnames'\n\n\n\n\nconst Card = ({title, url, image, description, grid, lang}) => {\n  return (\n    <Link className={cx(style.Card, (grid ? '' :  style['Card--list'] ))} to={`/${url}`} >\n      <article className={cx(!grid ? style.Card__wrapper : '' )}>\n        <div className={cx(style.Card__image, (grid ? '' :  style['Card__image--spacing'] ))}>\n          \n          {\n            image != null ?\n              <img className={style.Card__object} src={image.publicURL} alt=\" \" />\n            :\n            <svg className={style.Card__empty}  xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fillRule=\"evenodd\"><path strokeWidth=\"2\" stroke=\"#e5e5e5\" fill=\"#ffffff\" d=\"M0 0h239.625v119.927H0z\"/><path fill=\"#DCDDDE\" d=\"M18.433 41.231h202.759v3.574H18.433zM18.433 51.954h202.759v3.574H18.433zM18.433 62.677h202.759v3.574H18.433zM18.433 73.4h55.298v3.574H18.433z\"/><text fontFamily=\"Arial-BoldMT, Arial\" fontSize=\"40\" fontWeight=\"bold\" fill=\"#222\"><tspan x=\"155.912\" y=\"65.362\">?</tspan></text></g></svg>\n          }\n        </div>\n        <div className={style.Card__body}> \n          <h2 className={cx(style.Card__title, (grid ? style['Card__title--small'] : '' ))}>{title} \n          {lang && !grid && <svg  className={style.Card__flag} xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 30 22\"><defs><path id=\"a1\" d=\"M0 0h29.665v22H0z\"/></defs><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0h29.938v22H0z\" fill=\"#006AA7\" fillRule=\"nonzero\"/><mask id=\"b1\" fill=\"#fff\"><use xlinkHref=\"#a1\"/></mask><path fill=\"#FECC00\" fillRule=\"nonzero\" mask=\"url(#b1)\" d=\"M7.416 9.167H0v3.666h7.416V22h3.708v-9.167h18.814V9.167H11.124V0H7.416z\"/></g></svg>}\n          {lang && grid && <svg className={style.Card__flag} width=\"18\" height=\"12\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"><defs><path id=\"a\" d=\"M0 0h17.711v12H0z\"/></defs><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0h17.711v12H0z\" fill=\"#006AA7\" fillRule=\"nonzero\"/><mask id=\"b\" fill=\"#fff\"><use xlinkHref=\"#a\"/></mask><path fill=\"#FECC00\" fillRule=\"nonzero\" mask=\"url(#b)\" d=\"M4.428 5H0v2h4.428v5h2.214V7h11.069V5H6.642V0H4.428z\"/></g></svg>}</h2>\n          {!grid &&<p className={style.Card__description}>{description}</p>}\n        </div>\n      </article>\n     \n      \n     \n    </Link>\n  );\n}\n  \n\n\n\nexport default Card","import React from 'react';\nimport Card from '../Card';\nimport { stripTrailingSlash } from '../../utils/RemoveTrailingSlash';\n\nconst CardList = ({list}) => {\n    return list.map((item) => { \n\n      return <Card key={item.node.id} description={item.node.frontmatter.description} title={item.node.frontmatter.title} url={stripTrailingSlash(item.node.fields.slug)} image={item.node.frontmatter.previewImage} text={item.node.fields.slug} lang={item.node.frontmatter.lang} /> \n    })\n}\n\n\nexport default CardList","const stripTrailingSlash = (str) => {\n  return str.endsWith('/') ?\n      str.slice(0, -1) :\n      str;\n};\n\nexport {stripTrailingSlash}","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout.js'\nimport Wrapper from '../components/Wrapper'\nimport Heading from '../components/Heading'\nimport Preamble from '../components/Preamble';\nimport CardList from '../components/CardList';\nimport Blockquote from '../components/Blockquote';\nimport Content from '../components/Content';\nimport rehypeReact from \"rehype-react\"\nimport Collapse from '../components/Collapse';\n\n const renderAst = new rehypeReact({\n    createElement: React.createElement,\n    components: { \"collapse\": Collapse},\n  }).Compiler\n// Export Template for use in CMS preview\nexport const CategoryOverviewTemplate = ({\n  title,\n  intro,\n  blockquote,\n  contentAbove,\n  categoryPages,\n  body,\n  bodyHtml,\n  \n}) => (\n   \n  <>\n  <Wrapper tag=\"div\" menu={true}>\n      <Heading tag={1} text={title} align={\"left\"} />\n      <Preamble text={intro} tag=\"p\" align={\"left\"} />\n       <Content className=\"content\" source={contentAbove} />  \n      { categoryPages && <CardList list={categoryPages} /> }\n      {bodyHtml\n          ? <div className=\"Content\">{renderAst(bodyHtml)}</div>\n          : <Content className=\"Content\" source={body} />\n        }\n       \n      { blockquote && <Blockquote text={blockquote.text} author={blockquote.author} /> }\n  </Wrapper>\n  </>\n)\nconst CategoryOverviewPage = ({ data: { page, allPages },location , currentDirectory}) => {\n  \n  if(typeof window !== `undefined`) {\n    currentDirectory = location.href.split('/').filter(Boolean).pop();\n   }\n  \n\n  const children = {\n    links: allPages.hasOwnProperty('edges')\n      ? allPages.edges.filter(category => {\n        if(category.node.fields.contentType.includes(currentDirectory)) {\n          return {  ...category.node}\n        }\n        else {\n          return null;\n        }\n      })\n      : false   \n  }\n  \n  // Sort and arrange them in categories \n  \n  const breadcrumb = {  \n    title: page.frontmatter.title,\n    location: location\n  }\n\n  \n  return (\n    <Layout\n      meta={page.frontmatter.meta || false}\n      title={page.frontmatter.title || false}\n      menu={true}\n      breadcrumb={breadcrumb}\n      backgroundClass={page.frontmatter.background}\n    >\n      <CategoryOverviewTemplate \n        {...page} \n        {...page.frontmatter} \n        title={page.frontmatter.title}\n        intro={page.frontmatter.intro}\n        blockquote={page.frontmatter.blockquote}\n        categoryPages={children.links}\n        contentAbove={page.frontmatter.contentAbove}\n        body={page.html}\n        bodyHtml={page.htmlAst}\n        \n      />\n    </Layout>\n  )\n}\n\nexport default CategoryOverviewPage\n\nexport const pageQuery = graphql`\n  \n  \n  query CategoryOverviewPage($id: String!) {\n    \n    page: markdownRemark(id: { eq: $id }) {\n      ...Meta\n      htmlAst\n      html\n      frontmatter {\n        title\n        intro\n        previewImage {\n          publicURL\n        }\n        contentBelow\n        contentAbove\n        background\n        blockquote {\n          text\n          author\n        }\n      }\n    }\n\n    allPages: allMarkdownRemark(\n      filter: { fileAbsolutePath: {regex : \"/^((?!index).)*$/\"} },\n      sort: { order: ASC, fields: [frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            category\n            title\n            lang\n            previewImage {\n              publicURL\n            }\n            description\n          }\n          fields {\n            slug\n            contentType\n          }\n        }\n      }\n    }\n    \n  }\n`"],"sourceRoot":""}